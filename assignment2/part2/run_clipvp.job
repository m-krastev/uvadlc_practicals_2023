#!/bin/bash

#SBATCH --partition=gpu
#SBATCH --gpus=1

#SBATCH --job-name=ass2.2-2.3
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=4
#SBATCH --time=11:59:00
#SBATCH --mem=60000M
#SBATCH --output=/home/scur1382/uvadlc_practicals_2023/%A.out

date

export TMP_DIR="/scratch-local/scur1382"

module purge
module load 2022
module load Anaconda3/2022.05

# Your job starts in the directory where you call sbatch
WORK_DIR=$HOME/uvadlc_practicals_2023
cd $WORK_DIR

# Activate your environment
source activate dl2023

# Run 1: Visual prompting CLIP on CIFAR-10 with standard text prompt
code_dir=$WORK_DIR/assignment2/part2

# Standard constants
arch="ViT-B/32"
text_prompt_template="This is a photo of a {}"
epochs=20

## Set of experiments on CIFAR-10
# dataset="cifar10"
root=$TMP_DIR
mkdir -p $root

cp -r $WORK_DIR/data/ $TMP_DIR/

datasets=(cifar10 cifar100)
methods=(fixed_patch padding)
prompt_sizes=(1 30)

for dataset in "${datasets[@]}"; do

    for i in "${!methods[@]}"; do
        cp -r $WORK_DIR/data/ $TMP_DIR/
        method=${methods[$i]}
        prompt_size=${prompt_sizes[$i]}
        echo -e "Running experiment on $dataset with $method and prompt size $prompt_size\n"
        python $code_dir/main.py \
            --dataset $dataset \
            --arch $arch \
            --text_prompt_template "$text_prompt_template" \
            --epochs $epochs \
            --method $method \
            --prompt_size $prompt_size \
            --root $root\
            --print_freq 100
    done
done

injectionl=(0 5)
for dataset in "${datasets[@]}"; do

    for inj in "${injectionl[@]}"; do
        cp -r $WORK_DIR/data/ $TMP_DIR/

        echo -e "Running experiment on $dataset with "deep_prompt" and injection layer $inj \n"
        python $code_dir/main.py \
            --dataset $dataset \
            --arch $arch \
            --text_prompt_template "$text_prompt_template" \
            --epochs $epochs \
            --injection_layer $inj \
            --prompt_type deep_prompt \
            --print_freq 100 \
            --root $root
    done
done

# I'm disgusted by myself for this one, it runs the given job and automatically follows it. 
# echo $(sbatch --parsable ~/uvadlc_practicals_2023/assignment2/part2/run_clipvp.job | tail -1).out | xargs tail -Fn100